#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hethongdangkihoc
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Quanlymonhoc")]
	public partial class dbmonhocDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertchi_tiet_mon_hoc(chi_tiet_mon_hoc instance);
    partial void Updatechi_tiet_mon_hoc(chi_tiet_mon_hoc instance);
    partial void Deletechi_tiet_mon_hoc(chi_tiet_mon_hoc instance);
    partial void InsertThongtinmonhoc(Thongtinmonhoc instance);
    partial void UpdateThongtinmonhoc(Thongtinmonhoc instance);
    partial void DeleteThongtinmonhoc(Thongtinmonhoc instance);
    #endregion
		
		public dbmonhocDataContext() : 
				base(global::hethongdangkihoc.Properties.Settings.Default.QuanlymonhocConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbmonhocDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbmonhocDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbmonhocDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbmonhocDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<chi_tiet_mon_hoc> chi_tiet_mon_hocs
		{
			get
			{
				return this.GetTable<chi_tiet_mon_hoc>();
			}
		}
		
		public System.Data.Linq.Table<Thongtinmonhoc> Thongtinmonhocs
		{
			get
			{
				return this.GetTable<Thongtinmonhoc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[chi tiet mon hoc]")]
	public partial class chi_tiet_mon_hoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Hoc_ki;
		
		private string _Ma_mon;
		
		private string _Ten_mon;
		
		private double _He_so;
		
		private int _So_TC;
		
		private System.Nullable<double> _Hoc_phi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoc_kiChanging(string value);
    partial void OnHoc_kiChanged();
    partial void OnMa_monChanging(string value);
    partial void OnMa_monChanged();
    partial void OnTen_monChanging(string value);
    partial void OnTen_monChanged();
    partial void OnHe_soChanging(double value);
    partial void OnHe_soChanged();
    partial void OnSo_TCChanging(int value);
    partial void OnSo_TCChanged();
    partial void OnHoc_phiChanging(System.Nullable<double> value);
    partial void OnHoc_phiChanged();
    #endregion
		
		public chi_tiet_mon_hoc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Hoc ki]", Storage="_Hoc_ki", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Hoc_ki
		{
			get
			{
				return this._Hoc_ki;
			}
			set
			{
				if ((this._Hoc_ki != value))
				{
					this.OnHoc_kiChanging(value);
					this.SendPropertyChanging();
					this._Hoc_ki = value;
					this.SendPropertyChanged("Hoc_ki");
					this.OnHoc_kiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Ma mon]", Storage="_Ma_mon", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_mon
		{
			get
			{
				return this._Ma_mon;
			}
			set
			{
				if ((this._Ma_mon != value))
				{
					this.OnMa_monChanging(value);
					this.SendPropertyChanging();
					this._Ma_mon = value;
					this.SendPropertyChanged("Ma_mon");
					this.OnMa_monChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Ten mon]", Storage="_Ten_mon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten_mon
		{
			get
			{
				return this._Ten_mon;
			}
			set
			{
				if ((this._Ten_mon != value))
				{
					this.OnTen_monChanging(value);
					this.SendPropertyChanging();
					this._Ten_mon = value;
					this.SendPropertyChanged("Ten_mon");
					this.OnTen_monChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[He so]", Storage="_He_so", DbType="Float NOT NULL")]
		public double He_so
		{
			get
			{
				return this._He_so;
			}
			set
			{
				if ((this._He_so != value))
				{
					this.OnHe_soChanging(value);
					this.SendPropertyChanging();
					this._He_so = value;
					this.SendPropertyChanged("He_so");
					this.OnHe_soChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[So TC]", Storage="_So_TC", DbType="Int NOT NULL")]
		public int So_TC
		{
			get
			{
				return this._So_TC;
			}
			set
			{
				if ((this._So_TC != value))
				{
					this.OnSo_TCChanging(value);
					this.SendPropertyChanging();
					this._So_TC = value;
					this.SendPropertyChanged("So_TC");
					this.OnSo_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Hoc phi]", Storage="_Hoc_phi", DbType="Float")]
		public System.Nullable<double> Hoc_phi
		{
			get
			{
				return this._Hoc_phi;
			}
			set
			{
				if ((this._Hoc_phi != value))
				{
					this.OnHoc_phiChanging(value);
					this.SendPropertyChanging();
					this._Hoc_phi = value;
					this.SendPropertyChanged("Hoc_phi");
					this.OnHoc_phiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Thongtinmonhoc")]
	public partial class Thongtinmonhoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Mamon;
		
		private string _Tenmon;
		
		private double _Heso;
		
		private int _Sotinchi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMamonChanging(string value);
    partial void OnMamonChanged();
    partial void OnTenmonChanging(string value);
    partial void OnTenmonChanged();
    partial void OnHesoChanging(double value);
    partial void OnHesoChanged();
    partial void OnSotinchiChanging(int value);
    partial void OnSotinchiChanged();
    #endregion
		
		public Thongtinmonhoc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mamon", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mamon
		{
			get
			{
				return this._Mamon;
			}
			set
			{
				if ((this._Mamon != value))
				{
					this.OnMamonChanging(value);
					this.SendPropertyChanging();
					this._Mamon = value;
					this.SendPropertyChanged("Mamon");
					this.OnMamonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenmon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tenmon
		{
			get
			{
				return this._Tenmon;
			}
			set
			{
				if ((this._Tenmon != value))
				{
					this.OnTenmonChanging(value);
					this.SendPropertyChanging();
					this._Tenmon = value;
					this.SendPropertyChanged("Tenmon");
					this.OnTenmonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heso", DbType="Float NOT NULL")]
		public double Heso
		{
			get
			{
				return this._Heso;
			}
			set
			{
				if ((this._Heso != value))
				{
					this.OnHesoChanging(value);
					this.SendPropertyChanging();
					this._Heso = value;
					this.SendPropertyChanged("Heso");
					this.OnHesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sotinchi", DbType="Int NOT NULL")]
		public int Sotinchi
		{
			get
			{
				return this._Sotinchi;
			}
			set
			{
				if ((this._Sotinchi != value))
				{
					this.OnSotinchiChanging(value);
					this.SendPropertyChanging();
					this._Sotinchi = value;
					this.SendPropertyChanged("Sotinchi");
					this.OnSotinchiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
